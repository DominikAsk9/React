{"version":3,"sources":["components/LoadingComponent.js","shared/baseUrl.js","components/MenuComponent.js","components/DishdetailComponent.js","components/HeaderComponent.js","components/FooterComponent.js","components/ContactComponent.js","components/HomeComponent.js","components/AboutComponent.js","redux/ActionCreators.js","redux/ActionTypes.js","components/MainComponent.js","redux/dishes.js","redux/comments.js","redux/promotions.js","redux/leaders.js","redux/forms.js","App.js","redux/configureStore.js","serviceWorker.js","index.js"],"names":["Loading","className","baseUrl","RenderMenuItem","dish","onClick","Card","to","id","CardImg","width","src","image","alt","name","CardImgOverlay","CardTitle","Menu","props","menu","dishes","map","key","isLoading","errMess","Breadcrumb","BreadcrumbItem","active","RenderDish","in","transformProps","exitTransform","top","CardBody","CardText","description","RenderComments","comments","postComment","dishId","comment","author","Intl","DateTimeFormat","year","month","day","format","Date","parse","date","required","val","length","maxLength","len","CommentForm","state","isModalOpen","toggleModal","bind","handleSubmit","this","setState","values","rating","Button","outline","Modal","isOpen","toggle","ModalHeader","ModalBody","onSubmit","Row","Label","for","md","Col","select","defaultValue","model","value","htmlFor","text","placeholder","validators","minLength","show","messages","textarea","resize","rows","type","color","Component","DishDetail","Header","isNavOpen","toggleNav","handleLogin","event","alert","username","password","remember","checked","preventDefault","Navbar","dark","expand","NavbarToggler","NavbarBrand","href","height","Collapse","navbar","Nav","NavItem","Jumbotron","Form","FormGroup","Input","innerRef","input","check","Footer","isNumber","isNaN","Number","validEmail","test","Contact","console","log","JSON","stringify","resetFeedbackForm","postFeedback","firstname","lastname","telnum","email","agree","contactType","message","role","size","offset","checkbox","RenderCard","item","designation","CardSubtitle","Home","dishesLoading","dishesErrMess","promotion","promoLoading","promoErrMess","leader","leaderLoading","leaderErrMess","About","RenderLeader","leaders","leaders_list","Media","left","object","body","heading","list","CardHeader","title","dishesFailed","errmess","payload","addDishes","commentsFailed","addComments","promosLoading","promosFailed","addPromos","promos","leadersLoading","leadersFailed","addLeaders","Main","fetchDishes","fetchComments","fetchPromos","fetchLeaders","TransitionGroup","CSSTransition","location","classNames","timeout","path","component","filter","featured","dishErrMess","promotions","promo","exact","match","parseInt","params","commentsErrMess","withRouter","connect","dispatch","newComment","toISOString","fetch","method","headers","credentials","then","response","ok","error","Error","status","statusText","json","addComment","catch","newFeedback","actions","reset","Dishes","action","Comments","concat","Promotions","Leaders","InitialFeedback","store","createStore","combineReducers","createForms","feedback","applyMiddleware","thunk","logger","App","Boolean","window","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.42541a94.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport const Loading = () => {\r\n    return(\r\n        <div className=\"col-12\">\r\n            <span className=\"fa fa-spinner fa-pulse fa-3x fa-fw text-primary\"></span>\r\n            <p>Loading . . .</p>\r\n        </div>\r\n    );\r\n};","export const baseUrl = 'http://localhost:3001/';","import React from 'react';\r\nimport { Card, CardImg, CardImgOverlay,\r\n    CardTitle, Breadcrumb, BreadcrumbItem } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { Loading } from './LoadingComponent';\r\nimport { baseUrl } from '../shared/baseUrl';\r\n\r\nfunction RenderMenuItem ({dish, onClick}) {\r\n    return (\r\n        <Card>\r\n            <Link to={`/menu/${dish.id}`} >\r\n                <CardImg width=\"100%\" src={baseUrl + dish.image} alt={dish.name} />                <CardImgOverlay>\r\n                    <CardTitle>{dish.name}</CardTitle>\r\n                </CardImgOverlay>\r\n            </Link>\r\n        </Card>\r\n    );\r\n}\r\n\r\n    const Menu = (props) => {\r\n\r\n        const menu = props.dishes.dishes.map((dish) => {\r\n            return (\r\n                <div className=\"col-12 col-md-5 m-1\"  key={dish.id}>\r\n                    <RenderMenuItem dish={dish} onClick={props.onClick} />\r\n                </div>\r\n            );\r\n        });\r\n\r\n        if (props.dishes.isLoading) {\r\n            return(\r\n                <div className=\"container\">\r\n                    <div className=\"row\">            \r\n                        <Loading />\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n        else if (props.dishes.errMess) {\r\n            return(\r\n                <div className=\"container\">\r\n                    <div className=\"row\"> \r\n                        <div className=\"col-12\">\r\n                            <h4>{props.dishes.errMess}</h4>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n        else\r\n            return (\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <Breadcrumb>\r\n                            <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\r\n                            <BreadcrumbItem active>Menu</BreadcrumbItem>\r\n                        </Breadcrumb>\r\n                        <div className=\"col-12\">\r\n                            <h3>Menu</h3>\r\n                            <hr />\r\n                        </div>                \r\n                    </div>\r\n                    <div className=\"row\">\r\n                        {menu}\r\n                    </div>\r\n                </div>\r\n            );\r\n    }\r\n\r\nexport default Menu;","import React, {Component} from 'react';\r\nimport { Card, CardImg, CardText, CardBody,\r\n    CardTitle, Button, Breadcrumb, BreadcrumbItem, Modal, ModalHeader, ModalBody, Label, Row, Col } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { Control, LocalForm, Errors } from 'react-redux-form';\r\nimport { Loading } from './LoadingComponent';\r\nimport { baseUrl } from '../shared/baseUrl';\r\nimport { FadeTransform, Fade, Stagger } from 'react-animation-components';\r\n\r\n    function RenderDish ({dish}) {\r\n        return(\r\n            <FadeTransform\r\n                in\r\n                transformProps={{\r\n                    exitTransform: 'scale(0.5) translateY(-50%)'\r\n                }}>\r\n            <Card>\r\n                <CardImg top src={baseUrl + dish.image} alt={dish.name} />\r\n                <CardBody>\r\n                    <CardTitle>{dish.name}</CardTitle>\r\n                    <CardText>{dish.description}</CardText>\r\n                </CardBody>\r\n            </Card>\r\n            </FadeTransform>\r\n        );\r\n    }\r\n\r\n    function RenderComments({comments, postComment, dishId}){\r\n        if (comments != null) {\r\n                return(\r\n                    <div>\r\n                        <h4>Comments</h4>\r\n                        <ul className=\"list-unstyled\">\r\n                            <Stagger in>\r\n                                {comments.map((comment) => {\r\n                                    return (\r\n                                        <Fade in>\r\n                                            <li key={comment.id} >\r\n                                            <p>{comment.comment}</p>\r\n                                            <p>--{comment.author},\r\n                                                {new Intl.DateTimeFormat('en-US', { year: 'numeric', month: 'short', day: '2-digit'}).format(new Date(Date.parse(comment.date)))}</p>\r\n                                            </li>  \r\n                                        </Fade>\r\n                                    );\r\n                                })}\r\n                            </Stagger>\r\n                        </ul>\r\n                        <CommentForm dishId={dishId} postComment={postComment}></CommentForm>\r\n                    </div>\r\n                );\r\n            }\r\n        else{\r\n            return(\r\n                <div></div>\r\n            )\r\n        }\r\n    }\r\n\r\n    const DishDetail = (props) => {\r\n        if (props.isLoading) {\r\n            return(\r\n                <div className=\"container\">\r\n                    <div className=\"row\">            \r\n                        <Loading />\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n        else if (props.errMess) {\r\n            return(\r\n                <div className=\"container\">\r\n                    <div className=\"row\">            \r\n                        <h4>{props.errMess}</h4>\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n        else if (props.dish != null) {\r\n            return(\r\n                <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Breadcrumb>\r\n\r\n                        <BreadcrumbItem><Link to=\"/menu\">Menu</Link></BreadcrumbItem>\r\n                        <BreadcrumbItem active>{props.dish.name}</BreadcrumbItem>\r\n                    </Breadcrumb>\r\n                    <div className=\"col-12\">\r\n                        <h3>{props.dish.name}</h3>\r\n                        <hr />\r\n                    </div>                \r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"col-12 col-md-5 m-1\">\r\n                        <RenderDish dish={props.dish} />\r\n                    </div>\r\n                    <div className=\"col-12 col-md-5 m-1\">\r\n                        <RenderComments comments={props.comments}\r\n                        postComment={props.postComment}\r\n                        dishId={props.dish.id}\r\n                        />\r\n                    </div>\r\n                </div>\r\n                </div>\r\n            );\r\n        }\r\n        else {\r\n            return(\r\n                <div></div>\r\n            );\r\n        }\r\n    }\r\n\r\n    const required = (val) => val && val.length;\r\n    const maxLength = (len) => (val) => !(val) || (val.length <= len);\r\n    const minLength = (len) => (val) => val && (val.length >= len);\r\n    \r\n    \r\n    class CommentForm extends Component {\r\n        constructor(props) {\r\n            super(props);\r\n    \r\n            this.state = {\r\n                isModalOpen: false\r\n            };\r\n            this.toggleModal = this.toggleModal.bind(this);\r\n            this.handleSubmit = this.handleSubmit.bind(this);\r\n        }\r\n    \r\n        \r\n        toggleModal() {\r\n            this.setState({\r\n              isModalOpen: !this.state.isModalOpen\r\n            });\r\n        }\r\n    \r\n        \r\n        handleSubmit(values) {\r\n    \r\n            this.toggleModal();\r\n            this.props.postComment(this.props.dishId, values.rating, values.author, values.comment);\r\n        }\r\n    \r\n        render() {\r\n            return(\r\n                <div>\r\n                    <Button outline onClick={this.toggleModal}><span className=\"fa fa-edit fa-lg\"></span>Submit Comment</Button>\r\n    \r\n                    <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\r\n                        <ModalHeader toggle={this.toggleModal}>Submit Comment</ModalHeader>\r\n                        <ModalBody>\r\n                            <LocalForm onSubmit={(values) => this.handleSubmit(values)}>\r\n                                <Row  className=\"form-group\">\r\n                                    <Label for=\"rating\" md={12}>Rating</Label>\r\n                                    <Col  md={12}>\r\n                                        <Control.select defaultValue=\"5\" model=\".rating\" id=\"rating\" name=\"rating\" className=\"form-control\" >\r\n                                            <option value=\"1\">1</option>\r\n                                            <option value=\"2\">2</option>\r\n                                            <option value=\"3\">3</option>\r\n                                            <option value=\"4\">4</option>\r\n                                            <option value=\"5\">5</option>\r\n                                        </Control.select>\r\n                                    </Col>\r\n                                </Row>\r\n                                <Row className=\"form-group\">\r\n                                    <Label htmlFor=\"author\"  md={12}>Your Name</Label>\r\n                                    <Col  md={12}>\r\n                                        <Control.text model=\".author\" id=\"author\" name=\"author\" placeholder=\"Author\" className=\"form-control\" validators={{ required, minLength: minLength(3), maxLength: maxLength(15) }} />\r\n                                        <Errors className=\"text-danger\" model=\".author\" show=\"touched\" messages={{ required: 'Required', minLength: 'Must be greater than 3 characters', maxLength: 'Must be 15 charaters or less' }} />\r\n                                    </Col>\r\n                                </Row>\r\n    \r\n                                <Row className=\"form-group\">\r\n                                    <Label htmlFor=\"feedback\"  md={12}>Your feedback</Label>\r\n                                    <Col  md={12}>\r\n                                        <Control.textarea model=\".comment\" id=\"comment\" name=\"comment\" resize=\"none\" rows=\"6\" className=\"form-control\"/>\r\n                                    </Col>\r\n                                </Row>\r\n    \r\n                                <Button type=\"submit\" value=\"submit\" color=\"primary\">Submit</Button>\r\n                            </LocalForm>\r\n                        </ModalBody>\r\n                    </Modal>\r\n    \r\n                </div>\r\n            )\r\n        }\r\n    }\r\n\r\nexport default DishDetail;","import React, {Component} from 'react';\r\nimport { Navbar, NavbarBrand, Nav, NavbarToggler, Collapse, NavItem, Jumbotron,\r\n    Button, Modal, ModalHeader, ModalBody,\r\n    Form, FormGroup, Input, Label } from 'reactstrap';\r\nimport {NavLink} from 'react-router-dom';\r\n\r\nclass Header extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isNavOpen: false,\r\n            isModalOpen: false\r\n        };\r\n        this.toggleNav = this.toggleNav.bind(this);\r\n        this.toggleModal = this.toggleModal.bind(this);\r\n        this.handleLogin = this.handleLogin.bind(this);\r\n    }\r\n\r\n    toggleNav() {\r\n        this.setState({\r\n            isNavOpen: !this.state.isNavOpen\r\n        });\r\n    }\r\n\r\n    toggleModal() {\r\n        this.setState({\r\n          isModalOpen: !this.state.isModalOpen\r\n        });\r\n      }\r\n\r\n    handleLogin(event) {\r\n        this.toggleModal();\r\n        alert(\"Username: \" + this.username.value + \" Password: \" + this.password.value\r\n            + \" Remember: \" + this.remember.checked);\r\n        event.preventDefault();\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n          <>\r\n            <Navbar dark expand=\"md\">\r\n                <div className=\"container\">\r\n                    <NavbarToggler onClick={this.toggleNav} />\r\n                    <NavbarBrand className=\"mr-auto\" href=\"/\">\r\n                        <img src=\"assets/images/logo.png\" height=\"30\" width=\"41\"\r\n                        alt=\"Ristorante Con Fusion\" />\r\n                    </NavbarBrand>\r\n                    <Collapse isOpen={this.state.isNavOpen} navbar>\r\n                        <Nav navbar>\r\n                            <NavItem>\r\n                                <NavLink className=\"nav-link\" to=\"/home\">\r\n                                    <span className=\"fa fa-home fa-lg\"></span> Home\r\n                                </NavLink>\r\n                            </NavItem>\r\n                            <NavItem>\r\n                                <NavLink className=\"nav-link\" to=\"/aboutus\">\r\n                                    <span className=\"fa fa-info fa-lg\"></span> About US\r\n                                </NavLink>\r\n                            </NavItem>\r\n                            <NavItem>\r\n                                <NavLink className=\"nav-link\" to=\"/menu\">\r\n                                    <span className=\"fa fa-list fa-lg\"></span> Menu\r\n                                </NavLink>\r\n                            </NavItem>\r\n                            <NavItem>\r\n                                <NavLink className=\"nav-link\" to=\"/contactus\">\r\n                                    <span className=\"fa fa-address fa-lg\"></span> Contact US\r\n                                </NavLink>\r\n                            </NavItem>\r\n                        </Nav>\r\n                        <Nav className=\"ml-auto\" navbar>\r\n                            <NavItem>\r\n                                <Button outline onClick={this.toggleModal}><span className=\"fa fa-sign-in fa-lg\"></span> Login</Button>\r\n                            </NavItem>\r\n                        </Nav>\r\n                    </Collapse>\r\n                </div>\r\n            </Navbar>\r\n            <Jumbotron>\r\n                <div className=\"container\">\r\n                    <div className=\"row row-header\">\r\n                        <div className=\"col-12 col-sm-6\">\r\n                            <h1>Ristorante Con Fusion</h1>\r\n                            <p>We take inspiration from the World's best cousines, and create a unique fusion experience. Our lipsmacking creations will tickle culinary senses!</p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </Jumbotron>\r\n            <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\r\n                <ModalHeader toggle={this.toggleModal}>Login</ModalHeader>\r\n                    <ModalBody>\r\n                        <Form onSubmit={this.handleLogin}>\r\n                            <FormGroup>\r\n                                <Label htmlFor=\"username\">Username</Label>\r\n                                <Input type=\"text\" id=\"username\" name=\"username\"\r\n                                    innerRef={(input) => this.username = input} />\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <Label htmlFor=\"password\">Password</Label>\r\n                                <Input type=\"password\" id=\"password\" name=\"password\"\r\n                                    innerRef={(input) => this.password = input}  />\r\n                            </FormGroup>\r\n                            <FormGroup check>\r\n                                <Label check>\r\n                                    <Input type=\"checkbox\" name=\"remember\"\r\n                                    innerRef={(input) => this.remember = input}  />\r\n                                    Remember me\r\n                                </Label>\r\n                            </FormGroup>\r\n                            <Button type=\"submit\" value=\"submit\" color=\"primary\">Login</Button>\r\n                        </Form>\r\n                    </ModalBody>\r\n            </Modal>\r\n          </>  \r\n        );\r\n    }\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\nfunction Footer(props) {\r\n    return(\r\n    <div className=\"footer\">\r\n        <div className=\"container\">\r\n            <div className=\"row justify-content-center\">             \r\n                <div className=\"col-4 offset-1 col-sm-2\">\r\n                    <h5>Links</h5>\r\n                    <ul className=\"list-unstyled\">\r\n                        <li><Link to='/home'>Home</Link></li>\r\n                        <li><Link to='/aboutus'>About Us</Link></li>\r\n                        <li><Link to='/menu'>Menu</Link></li>\r\n                        <li><Link to='/contactus'>Contact Us</Link></li>\r\n                    </ul>\r\n                </div>\r\n                <div className=\"col-7 col-sm-5\">\r\n                    <h5>Our Address</h5>\r\n                    <address>\r\n\t\t              121, Clear Water Bay Road<br />\r\n\t\t              Clear Water Bay, Kowloon<br />\r\n\t\t              HONG KONG<br />\r\n\t\t              <i className=\"fa fa-phone fa-lg\"></i>: +852 1234 5678<br />\r\n\t\t              <i className=\"fa fa-fax fa-lg\"></i>: +852 8765 4321<br />\r\n\t\t              <i className=\"fa fa-envelope fa-lg\"></i>: <a href=\"mailto:confusion@food.net\">\r\n                         confusion@food.net</a>\r\n                    </address>\r\n                </div>\r\n                <div className=\"col-12 col-sm-4 align-self-center\">\r\n                    <div className=\"text-center\">\r\n                        <a className=\"btn btn-social-icon btn-google\" href=\"http://google.com/+\"><i className=\"fa fa-google-plus\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-facebook\" href=\"http://www.facebook.com/profile.php?id=\"><i className=\"fa fa-facebook\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-linkedin\" href=\"http://www.linkedin.com/in/\"><i className=\"fa fa-linkedin\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-twitter\" href=\"http://twitter.com/\"><i className=\"fa fa-twitter\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-google\" href=\"http://youtube.com/\"><i className=\"fa fa-youtube\"></i></a>\r\n                        <a className=\"btn btn-social-icon\" href=\"mailto:\"><i className=\"fa fa-envelope-o\"></i></a>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"row justify-content-center\">             \r\n                <div className=\"col-auto\">\r\n                    <p>© Copyright 2018 Ristorante Con Fusion</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default Footer;","import React, { Component } from 'react';\r\nimport { Breadcrumb, BreadcrumbItem,\r\n    Button, Form, FormGroup, Label, Input, Col, Row, FormFeedback } from 'reactstrap';\r\nimport {Link} from 'react-router-dom';\r\nimport { Control, Errors, actions } from 'react-redux-form';\r\n\r\n\r\nconst required = (val) => val && val.length;\r\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\r\nconst minLength = (len) => (val) => val && (val.length >= len);\r\nconst isNumber = (val) => !isNaN(Number(val));\r\nconst validEmail = (val) => /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);\r\n\r\nclass Contact extends Component {\r\n\r\n        constructor(props) {\r\n            super(props);\r\n    \r\n            this.handleSubmit = this.handleSubmit.bind(this);\r\n            \r\n        }\r\n    \r\n        handleSubmit(values) {\r\n            console.log('Current State is: ' + JSON.stringify(values));\r\n            this.props.resetFeedbackForm();\r\n            this.props.postFeedback(values.firstname,values.lastname,values.telnum,values.email,values.agree,values.contactType,values.message);\r\n        }\r\n\r\n        render() {\r\n            return(\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <Breadcrumb>\r\n                            <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\r\n                            <BreadcrumbItem active>Contact Us</BreadcrumbItem>\r\n                        </Breadcrumb>\r\n                        <div className=\"col-12\">\r\n                            <h3>Contact Us</h3>\r\n                            <hr />\r\n                        </div>                \r\n                    </div>\r\n                    <div className=\"row row-content\">\r\n                        <div className=\"col-12\">\r\n                        <h3>Location Information</h3>\r\n                        </div>\r\n                        <div className=\"col-12 col-sm-4 offset-sm-1\">\r\n                                <h5>Our Address</h5>\r\n                                <address>\r\n                                121, Clear Water Bay Road<br />\r\n                                Clear Water Bay, Kowloon<br />\r\n                                HONG KONG<br />\r\n                                <i className=\"fa fa-phone\"></i>: +852 1234 5678<br />\r\n                                <i className=\"fa fa-fax\"></i>: +852 8765 4321<br />\r\n                                <i className=\"fa fa-envelope\"></i>: <a href=\"mailto:confusion@food.net\">confusion@food.net</a>\r\n                                </address>\r\n                        </div>\r\n                        <div className=\"col-12 col-sm-6 offset-sm-1\">\r\n                            <h5>Map of our Location</h5>\r\n                        </div>\r\n                        <div className=\"col-12 col-sm-11 offset-sm-1\">\r\n                            <div className=\"btn-group\" role=\"group\">\r\n                                <a role=\"button\" className=\"btn btn-primary\" href=\"tel:+85212345678\"><i className=\"fa fa-phone\"></i> Call</a>\r\n                                <a role=\"button\" className=\"btn btn-info\"><i className=\"fa fa-skype\"></i> Skype</a>\r\n                                <a role=\"button\" className=\"btn btn-success\" href=\"mailto:confusion@food.net\"><i className=\"fa fa-envelope-o\"></i> Email</a>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row row-content\">\r\n                        <div className=\"col-12\">\r\n                            <h3>Send us your Feedback</h3>\r\n                        </div>\r\n                        <div className=\"col-12 col-md-9\">\r\n                            <Form model=\"feedback\" onSubmit={(values) => this.handleSubmit(values)}>\r\n                                <Row className=\"form-group\">\r\n                                    <Label htmlFor=\"firstname\" md={2}>First Name</Label>\r\n                                        <Col md={10}>\r\n                                            <Control.text model=\".firstname\" id=\"firstname\" name=\"firstname\"\r\n                                                placeholder=\"First Name\"\r\n                                                className=\"form-control\"\r\n                                                validators={{\r\n                                                    required, minLength: minLength(3), maxLength: maxLength(15)\r\n                                                }}\r\n                                                />\r\n                                            <Errors\r\n                                                className=\"text-danger\"\r\n                                                model=\".firstname\"\r\n                                                show=\"touched\"\r\n                                                messages={{\r\n                                                    required: 'Required',\r\n                                                    minLength: 'Must be greater than 2 characters',\r\n                                                    maxLength: 'Must be 15 characters or less'\r\n                                                }}\r\n                                            />\r\n                                        </Col>\r\n                                    </Row>\r\n                                    <Row className=\"form-group\">\r\n                                        <Label htmlFor=\"lastname\" md={2}>Last Name</Label>\r\n                                        <Col md={10}>\r\n                                            <Control.text model=\".lastname\" id=\"lastname\" name=\"lastname\"\r\n                                                placeholder=\"Last Name\"\r\n                                                className=\"form-control\"\r\n                                                validators={{\r\n                                                    required, minLength: minLength(3), maxLength: maxLength(15)\r\n                                                }}\r\n                                                />\r\n                                            <Errors\r\n                                                className=\"text-danger\"\r\n                                                model=\".lastname\"\r\n                                                show=\"touched\"\r\n                                                messages={{\r\n                                                    required: 'Required',\r\n                                                    minLength: 'Must be greater than 2 characters',\r\n                                                    maxLength: 'Must be 15 characters or less'\r\n                                                }}\r\n                                            />\r\n                                        </Col>\r\n                                    </Row>\r\n                                    <Row className=\"form-group\">\r\n                                        <Label htmlFor=\"telnum\" md={2}>Contact Tel.</Label>\r\n                                        <Col md={10}>\r\n                                            <Control.text model=\".telnum\" id=\"telnum\" name=\"telnum\"\r\n                                                placeholder=\"Tel. Number\"\r\n                                                className=\"form-control\"\r\n                                                validators={{\r\n                                                    required, minLength: minLength(3), maxLength: maxLength(15), isNumber\r\n                                                }}\r\n                                                />\r\n                                            <Errors\r\n                                                className=\"text-danger\"\r\n                                                model=\".telnum\"\r\n                                                show=\"touched\"\r\n                                                messages={{\r\n                                                    required: 'Required',\r\n                                                    minLength: 'Must be greater than 2 numbers',\r\n                                                    maxLength: 'Must be 15 numbers or less',\r\n                                                    isNumber: 'Must be a number'\r\n                                                }}\r\n                                            />\r\n                                        </Col>\r\n                                    </Row>\r\n                                    <Row className=\"form-group\">\r\n                                        <Label htmlFor=\"email\" md={2}>Email</Label>\r\n                                        <Col md={10}>\r\n                                            <Control.text model=\".email\" id=\"email\" name=\"email\"\r\n                                                placeholder=\"Email\"\r\n                                                className=\"form-control\"\r\n                                                validators={{\r\n                                                    required, validEmail\r\n                                                }}\r\n                                                />\r\n                                            <Errors\r\n                                                className=\"text-danger\"\r\n                                                model=\".email\"\r\n                                                show=\"touched\"\r\n                                                messages={{\r\n                                                    required: 'Required',\r\n                                                    validEmail: 'Invalid Email Address'\r\n                                                }}\r\n                                            />\r\n                                    </Col>\r\n                                </Row>\r\n                                    <Row className=\"form-group\">\r\n                                    <Col md={\r\n                                        {\r\n                                            size: 6,\r\n                                            offset: 2\r\n                                        }\r\n                                    }>\r\n                                        <div className=\"form-check\">\r\n                                            <Label check>\r\n                                                <Control.checkbox className=\"form-check-input\" model=\".agree\" name=\"agree\"/> {' '}\r\n                                                <strong>May we contact you?</strong>\r\n                                            </Label>\r\n                                        </div>\r\n                                    </Col>\r\n                                    <Col md={\r\n                                        {\r\n                                            size: 3,\r\n                                            offset: 1\r\n                                        }\r\n                                    }>\r\n                                        <Control.select className=\"form-control\" model=\".contactType\" name=\"contactType\">\r\n                                            <option>Tel.</option>\r\n                                            <option>Email</option>\r\n                                        </Control.select>\r\n                                    </Col>\r\n                                </Row>\r\n                                <Row className=\"form-group\">\r\n                                    <Label htmlFor=\"message\"\r\n                                        md={2}>Your Feedback</Label>\r\n                                    <Col md={10}>\r\n                                        <Control.textarea className=\"form-control\" id=\"message\" model=\".message\" name=\"message\" rows=\"12\"/>\r\n                                    </Col>\r\n                                </Row>\r\n                                <Row className=\"form-group\">\r\n                                    <Col md={\r\n                                        {\r\n                                            size: 10,\r\n                                            offset: 2\r\n                                        }\r\n                                    }>\r\n                                        <Button color=\"primary\" type=\"submit\">\r\n                                            Send Feedback\r\n                                        </Button>\r\n                                    </Col>\r\n                                </Row>\r\n                            </Form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n}\r\n\r\nexport default Contact;","import React from 'react';\r\nimport { Card, CardImg, CardText, CardBody,\r\n    CardTitle, CardSubtitle} from 'reactstrap';\r\nimport { Loading } from './LoadingComponent';\r\nimport { baseUrl } from '../shared/baseUrl';\r\nimport { FadeTransform} from 'react-animation-components';\r\n\r\nfunction RenderCard({item, isLoading, errMess}) {\r\n    \r\n    if (isLoading) {\r\n        return(\r\n                <Loading />\r\n        );\r\n    }\r\n    else if (errMess) {\r\n        return(\r\n                <h4>{errMess}</h4>\r\n        );\r\n    }\r\n    else \r\n        return(\r\n            <FadeTransform\r\n                in\r\n                transformProps={{\r\n                    exitTransform: 'scale(0.5) translateY(-50%)'\r\n                }}>\r\n                <Card>\r\n                    <CardImg src={baseUrl + item.image} alt={item.name} />\r\n                    <CardBody>\r\n                    <CardTitle>{item.name}</CardTitle>\r\n                    {item.designation ? <CardSubtitle>{item.designation}</CardSubtitle> : null }\r\n                    <CardText>{item.description}</CardText>\r\n                    </CardBody>\r\n                </Card>\r\n            </FadeTransform>\r\n        );\r\n\r\n}\r\n\r\nfunction Home(props) {\r\n    return(\r\n        <div className=\"container\">\r\n            <div className=\"row align-items-start\">\r\n                <div className=\"col-12 col-md m-1\">\r\n                    <RenderCard item={props.dish} isLoading={props.dishesLoading} errMess={props.dishesErrMess} />  \r\n                </div>\r\n                <div className=\"col-12 col-md m-1\">\r\n                    <RenderCard item={props.promotion} isLoading={props.promoLoading} errMess={props.promoErrMess} /> \r\n                </div>\r\n                <div className=\"col-12 col-md m-1\">\r\n                    <RenderCard item={props.leader} isLoading={props.leaderLoading} errMess={props.leaderErrMess} />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Home;","import React from 'react';\r\nimport { Breadcrumb, BreadcrumbItem, Card, CardBody, CardHeader, Media } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { baseUrl } from \"../shared/baseUrl\";\r\nimport { Fade, Stagger } from \"react-animation-components\";\r\nimport { Loading } from \"./LoadingComponent\";\r\n\r\nfunction About(props) {\r\n    const RenderLeader = ({ leaders, leaderLoading, leaderErrMess }) => {\r\n      console.log(leaderLoading, leaderErrMess);\r\n  \r\n      const leaders_list = leaders.map(leader => {\r\n        return (\r\n          <Fade in key={leader.id}>\r\n            <Media>\r\n              <Media left>\r\n                <Media object src={baseUrl + leader.image} alt={leader.name} />\r\n              </Media>\r\n              <Media body className=\"ml-2\">\r\n                <Media heading>{leader.name}</Media>\r\n                <p>{leader.designation}</p>\r\n                <p>{leader.description}</p>\r\n              </Media>\r\n            </Media>\r\n          </Fade>\r\n        );\r\n      });\r\n      if (leaderLoading) {\r\n        return <Loading />;\r\n      } else if (leaderErrMess) {\r\n        return <h4>{leaderErrMess}</h4>;\r\n      } else\r\n        return (\r\n          <Media list>\r\n            <Stagger in>{leaders_list}</Stagger>\r\n          </Media>\r\n        );\r\n    };\r\n  \r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <Breadcrumb>\r\n            <BreadcrumbItem>\r\n              <Link to=\"/home\">Home</Link>\r\n            </BreadcrumbItem>\r\n            <BreadcrumbItem active>About Us</BreadcrumbItem>\r\n          </Breadcrumb>\r\n          <div className=\"col-12\">\r\n            <h3>About Us</h3>\r\n            <hr />\r\n          </div>\r\n        </div>\r\n        <div className=\"row row-content\">\r\n          <div className=\"col-12 col-md-6\">\r\n            <h2>Our History</h2>\r\n            <p>\r\n              Started in 2010, Ristorante con Fusion quickly established itself as\r\n              a culinary icon par excellence in Hong Kong. With its unique brand\r\n              of world fusion cuisine that can be found nowhere else, it enjoys\r\n              patronage from the A-list clientele in Hong Kong. Featuring four of\r\n              the best three-star Michelin chefs in the world, you never know what\r\n              will arrive on your plate the next time you visit us.\r\n            </p>\r\n            <p>\r\n              The restaurant traces its humble beginnings to{\" \"}\r\n              <em>The Frying Pan</em>, a successful chain started by our CEO, Mr.\r\n              Peter Pan, that featured for the first time the world's best\r\n              cuisines in a pan.\r\n            </p>\r\n          </div>\r\n          <div className=\"col-12 col-md-5\">\r\n            <Card>\r\n              <CardHeader className=\"bg-primary text-white\">\r\n                Facts At a Glance\r\n              </CardHeader>\r\n              <CardBody>\r\n                <dl className=\"row p-1\">\r\n                  <dt className=\"col-6\">Started</dt>\r\n                  <dd className=\"col-6\">3 Feb. 2013</dd>\r\n                  <dt className=\"col-6\">Major Stake Holder</dt>\r\n                  <dd className=\"col-6\">HK Fine Foods Inc.</dd>\r\n                  <dt className=\"col-6\">Last Year's Turnover</dt>\r\n                  <dd className=\"col-6\">$1,250,375</dd>\r\n                  <dt className=\"col-6\">Employees</dt>\r\n                  <dd className=\"col-6\">40</dd>\r\n                </dl>\r\n              </CardBody>\r\n            </Card>\r\n          </div>\r\n          <div className=\"col-12\">\r\n            <Card>\r\n              <CardBody className=\"bg-faded\">\r\n                <blockquote className=\"blockquote\">\r\n                  <p className=\"mb-0\">\r\n                    You better cut the pizza in four pieces because I'm not hungry\r\n                    enough to eat six.\r\n                  </p>\r\n                  <footer className=\"blockquote-footer\">\r\n                    Yogi Berra,\r\n                    <cite title=\"Source Title\">\r\n                      The Wit and Wisdom of Yogi Berra, P. Pepe, Diversion Books,\r\n                      2014\r\n                    </cite>\r\n                  </footer>\r\n                </blockquote>\r\n              </CardBody>\r\n            </Card>\r\n          </div>\r\n        </div>\r\n        <div className=\"row row-content\">\r\n          <div className=\"col-12\">\r\n            <h2>Corporate Leadership</h2>\r\n          </div>\r\n  \r\n          <div className=\"col-12\">\r\n            <RenderLeader\r\n              leaders={props.leaders}\r\n              leaderLoading={props.isLoading}\r\n              leaderErrMess={props.errMess}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  \r\n  export default About;","import * as ActionTypes from './ActionTypes';\r\nimport { baseUrl } from '../shared/baseUrl';\r\n\r\nexport const addComment = (dishId, rating, author, comment) => ({\r\n    type: ActionTypes.ADD_COMMENT,\r\n    payload: comment\r\n});\r\n\r\nexport const postComment = (dishId, rating, author, comment) => (dispatch) => {\r\n\r\n    const newComment = {\r\n        dishId: dishId,\r\n        rating: rating,\r\n        author: author,\r\n        comment: comment\r\n    };\r\n    \r\n    newComment.date = new Date().toISOString();\r\n    \r\n    return fetch(baseUrl + 'comments', {\r\n        method: \"POST\",\r\n        body: JSON.stringify(newComment),\r\n        headers: {\r\n          \"Content-Type\": \"application/json\"\r\n        },\r\n        credentials: \"same-origin\"\r\n    })\r\n    .then(response => {\r\n        if (response.ok) {\r\n          return response;\r\n        } else {\r\n          var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n          error.response = response;\r\n          throw error;\r\n        }\r\n      },\r\n      error => {\r\n            throw error;\r\n      })\r\n    .then(response => response.json())\r\n    .then(response => dispatch(addComment(response)))\r\n    .catch(error =>  { console.log('post comments', error.message); alert('Your comment could not be posted\\nError: '+error.message); });\r\n};\r\n\r\nexport const fetchDishes = () => (dispatch) => {\r\n\r\n    dispatch(dishesLoading(true));\r\n\r\n    return fetch(baseUrl + 'dishes')\r\n    .then(response => {\r\n        if (response.ok) {\r\n          return response;\r\n        } else {\r\n          var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n          error.response = response;\r\n          throw error;\r\n        }\r\n      },\r\n      error => {\r\n            var errmess = new Error(error.message);\r\n            throw errmess;\r\n      })\r\n    .then(response => response.json())\r\n    .then(dishes => dispatch(addDishes(dishes)))\r\n    .catch(error => dispatch(dishesFailed(error.message)));\r\n}\r\n\r\n\r\nexport const dishesLoading = () => ({\r\n    type: ActionTypes.DISHES_LOADING\r\n});\r\n\r\nexport const dishesFailed = (errmess) => ({\r\n    type: ActionTypes.DISHES_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addDishes = (dishes) => ({\r\n    type: ActionTypes.ADD_DISHES,\r\n    payload: dishes\r\n});\r\n\r\nexport const fetchComments = () => (dispatch) => {    \r\n    return fetch(baseUrl + 'comments')\r\n    .then(response => {\r\n        if (response.ok) {\r\n          return response;\r\n        } else {\r\n          var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n          error.response = response;\r\n          throw error;\r\n        }\r\n      },\r\n      error => {\r\n            var errmess = new Error(error.message);\r\n            throw errmess;\r\n      })\r\n    .then(response => response.json())\r\n    .then(comments => dispatch(addComments(comments)))\r\n    .catch(error => dispatch(commentsFailed(error.message)));\r\n};\r\n\r\nexport const commentsFailed = (errmess) => ({\r\n    type: ActionTypes.COMMENTS_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addComments = (comments) => ({\r\n    type: ActionTypes.ADD_COMMENTS,\r\n    payload: comments\r\n});\r\n\r\nexport const fetchPromos = () => (dispatch) => {\r\n    \r\n    dispatch(promosLoading());\r\n\r\n    return fetch(baseUrl + 'promotions')\r\n    .then(response => {\r\n        if (response.ok) {\r\n          return response;\r\n        } else {\r\n          var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n          error.response = response;\r\n          throw error;\r\n        }\r\n      },\r\n      error => {\r\n            var errmess = new Error(error.message);\r\n            throw errmess;\r\n      })\r\n    .then(response => response.json())\r\n    .then(promos => dispatch(addPromos(promos)))\r\n    .catch(error => dispatch(promosFailed(error.message)));\r\n}\r\n\r\nexport const promosLoading = () => ({\r\n    type: ActionTypes.PROMOS_LOADING\r\n});\r\n\r\nexport const promosFailed = (errmess) => ({\r\n    type: ActionTypes.PROMOS_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addPromos = (promos) => ({\r\n    type: ActionTypes.ADD_PROMOS,\r\n    payload: promos\r\n});\r\n\r\nexport const fetchLeaders = () => dispatch => {\r\n  dispatch(leadersLoading());\r\n\r\n  return fetch(baseUrl + \"leaders\")\r\n    .then(\r\n      response => {\r\n        if (response.ok) {\r\n          return response;\r\n        } else {\r\n          var error = new Error(\r\n            \"Error \" + response.status + \": \" + response.statusText\r\n          );\r\n          error.response = response;\r\n          throw error;\r\n        }\r\n      },\r\n      error => {\r\n        var errmess = new Error(error.message);\r\n        throw errmess;\r\n      }\r\n    )\r\n    .then(response => response.json())\r\n    .then(leaders => dispatch(addLeaders(leaders)))\r\n    .catch(error => dispatch(leadersFailed(error.message)));\r\n};\r\nexport const leadersLoading = () => ({\r\n  type: ActionTypes.LEADERS_LOADING\r\n});\r\n\r\nexport const leadersFailed = errmess => ({\r\n  type: ActionTypes.LEADERS_FAILED,\r\n  payload: errmess\r\n});\r\n\r\nexport const addLeaders = leaders => ({\r\n  type: ActionTypes.ADD_LEADERS,\r\n  payload: leaders\r\n});\r\n\r\nexport const postFeedback = (firstname, lastname, telnum, email, agree, contactType, message) => dispatch => {\r\n  const newFeedback = {\r\n    firstname: firstname,\r\n    lastname: lastname,\r\n    telnum: telnum,\r\n    email: email,\r\n    agree: agree,\r\n    contactType: contactType,\r\n    message: message\r\n  };\r\n\r\n  return fetch(baseUrl + \"feedback\", {\r\n    method: \"POST\",\r\n    body: JSON.stringify(newFeedback),\r\n    headers: {\r\n      \"Content-Type\": \"application/json\"\r\n    },\r\n    credentials: \"same-origin\"\r\n  })\r\n    .then(\r\n      response => {\r\n        if (response.ok) {\r\n          return response;\r\n        } else {\r\n          var error = new Error(\r\n            \"Error \" + response.status + \": \" + response.statusText\r\n          );\r\n          error.response = response;\r\n          throw error;\r\n        }\r\n      },\r\n      error => {\r\n        throw error;\r\n      }\r\n    )\r\n    .then(response => response.json())\r\n    .then(response =>\r\n      alert(\"Thank for submitting feedback!\" + JSON.stringify(response))\r\n    )\r\n    .catch(error => {\r\n      console.log(\"post feedbacks\", error.message);\r\n      alert(\"Your feedback could not be posted!\\nError: \" + error.message);\r\n    });\r\n};","\r\nexport const ADD_COMMENT = 'ADD_COMMENT';\r\nexport const DISHES_LOADING = 'DISHES_LOADING';\r\nexport const DISHES_FAILED = 'DISHES_FAILED';\r\nexport const ADD_DISHES = 'ADD_DISHES';\r\nexport const ADD_COMMENTS = 'ADD_COMMENTS';\r\nexport const COMMENTS_FAILED = 'COMMENTS_FAILED';\r\nexport const PROMOS_LOADING = 'PROMOS_LOADING';\r\nexport const ADD_PROMOS = 'ADD_PROMOS';\r\nexport const PROMOS_FAILED = 'PROMOS_FAILED';\r\nexport const LEADERS_LOADING = 'LEADERS_LOADING';\r\nexport const LEADERS_FAILED = 'LEADERS_FAILED';\r\nexport const ADD_LEADERS = 'ADD_LEADERS';","import React, { Component } from 'react';\r\nimport Menu from './MenuComponent';\r\nimport DishDetail from './DishdetailComponent';\r\nimport Header from './HeaderComponent';\r\nimport Footer from './FooterComponent';\r\nimport Contact from './ContactComponent';\r\nimport Home from './HomeComponent';\r\nimport About from './AboutComponent';\r\nimport {Switch, Route, Redirect, withRouter} from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { actions } from 'react-redux-form';\r\nimport { postComment, fetchDishes, fetchComments, fetchPromos, fetchLeaders, postFeedback } from '../redux/ActionCreators';\r\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    dishes: state.dishes,\r\n    comments: state.comments,\r\n    promotions: state.promotions,\r\n    leaders: state.leaders\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  postComment: (dishId, rating, author, comment) => dispatch(postComment(dishId, rating, author, comment)), \r\n  postFeedback: ( firstname, lastname, telnum, email, agree, contactType, message ) => dispatch(postFeedback(firstname, lastname, telnum, email, agree, contactType, message)),\r\n  fetchDishes: () => { dispatch(fetchDishes())},\r\n  resetFeedbackForm: () => { dispatch(actions.reset('feedback'))},\r\n  fetchComments: () => dispatch(fetchComments()),\r\n  fetchPromos: () => dispatch(fetchPromos()),\r\n  fetchLeaders: () => dispatch(fetchLeaders())\r\n});\r\n\r\nclass Main extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.fetchDishes();\r\n    this.props.fetchComments();\r\n    this.props.fetchPromos();\r\n    this.props.fetchLeaders();\r\n  }\r\n\r\n  render() {\r\n\r\n    const HomePage = () => {\r\n      return(\r\n        <Home \r\n          dish={this.props.dishes.dishes.filter((dish) => dish.featured)[0]}\r\n          dishesLoading={this.props.dishes.isLoading}\r\n          dishErrMess={this.props.dishes.errMess}\r\n          promotion={this.props.promotions.promotions.filter((promo) => promo.featured)[0]}\r\n          promoLoading={this.props.promotions.isLoading}\r\n          promoErrMess={this.props.promotions.errMess}\r\n          leader={this.props.leaders.leaders.filter((leader) => leader.featured)[0]}\r\n          leaderLoading={this.props.leaders.isLoading}\r\n          leaderErrMess={this.props.leaders.errMess}\r\n        />\r\n      );\r\n    }\r\n\r\n    const DishWithId = ({match}) => {\r\n      return(\r\n        <DishDetail dish={this.props.dishes.dishes.filter((dish) => dish.id === parseInt(match.params.dishId,10))[0]}\r\n          isLoading={this.props.dishes.isLoading}\r\n          errMess={this.props.dishes.errMess}\r\n          comments={this.props.comments.comments.filter((comment) => comment.dishId === parseInt(match.params.dishId,10))}\r\n          commentsErrMess={this.props.comments.errMess}\r\n          postComment={this.props.postComment}\r\n        />\r\n      );\r\n    };\r\n    const AboutPage = () => {\r\n      return (\r\n        <About\r\n          leaders={this.props.leaders.leaders}\r\n          isLoading={this.props.leaders.isLoading}\r\n          errMess={this.props.leaders.errMess}\r\n        />\r\n      );\r\n    };\r\n\r\n    return (\r\n      <div>\r\n        <Header />\r\n          <TransitionGroup>\r\n            <CSSTransition key={this.props.location.key} classNames=\"page\" timeout={300}>\r\n              <Switch location={this.props.location}>\r\n                  <Route path='/home' component={HomePage} />\r\n                  <Route exact path='/aboutus' component={AboutPage} />\r\n                  <Route exact path='/menu' component={() => <Menu dishes={this.props.dishes} />} />\r\n                  <Route path='/menu/:dishId' component={DishWithId} />\r\n                  <Route exact path='/contactus' component={() => <Contact resetFeedbackForm={this.props.resetFeedbackForm} postFeedback={this.props.postFeedback} />} />\r\n                  <Redirect to=\"/home\" />\r\n              </Switch>\r\n            </CSSTransition>\r\n          </TransitionGroup>\r\n        <Footer />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Main));","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Dishes = (state = { isLoading: true,\r\n    errMess: null,\r\n    dishes:[]}, action) => {\r\n    switch (action.type) {\r\n        case ActionTypes.ADD_DISHES:\r\n            return {...state, isLoading: false, errMess: null, dishes: action.payload};\r\n\r\n        case ActionTypes.DISHES_LOADING:\r\n            return {...state, isLoading: true, errMess: null, dishes: []}\r\n\r\n        case ActionTypes.DISHES_FAILED:\r\n            return {...state, isLoading: false, errMess: action.payload};\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Comments = (state = { errMess: null, comments:[]}, action) => {\r\n  switch (action.type) {\r\n    case ActionTypes.ADD_COMMENTS:\r\n      return {...state, errMess: null, comments: action.payload};\r\n\r\n    case ActionTypes.COMMENTS_FAILED:\r\n      return {...state, errMess: action.payload};\r\n\r\n    case ActionTypes.ADD_COMMENT:\r\n        var comment = action.payload;\r\n        return { ...state, comments: state.comments.concat(comment)};\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Promotions = (state  = { isLoading: true,\r\n                                        errMess: null,\r\n                                        promotions:[]}, action) => {\r\n    switch (action.type) {\r\n        case ActionTypes.ADD_PROMOS:\r\n        return {...state, isLoading: false, errMess: null, promotions: action.payload};\r\n\r\n        case ActionTypes.PROMOS_LOADING:\r\n            return {...state, isLoading: true, errMess: null, promotions: []}\r\n\r\n        case ActionTypes.PROMOS_FAILED:\r\n            return {...state, isLoading: false, errMess: action.payload};\r\n\r\n        default:\r\n          return state;\r\n      }\r\n};","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Leaders = (state = { isLoading: true, errMess: null, leaders: [] }, action) => {\r\n    switch (action.type) {\r\n        case ActionTypes.ADD_LEADERS:\r\n            return {\r\n                ...state, isLoading: false, errMess: null, leaders: action.payload\r\n            };\r\n\r\n        case ActionTypes.LEADERS_LOADING:\r\n            return {\r\n                ...state, isLoading: true, errMess: null, leaders: []\r\n            }\r\n\r\n        case ActionTypes.LEADERS_FAILED:\r\n            return {\r\n                ...state, isLoading: false, errMess: action.payload\r\n            };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};","export const InitialFeedback = {\r\n    firstname: '',\r\n    lastname: '',\r\n    telnum: '',\r\n    email: '',\r\n    agree: false,\r\n    contactType: 'Tel.',\r\n    message: ''\r\n};","import React, { Component } from 'react';\nimport {BrowserRouter} from 'react-router-dom';\nimport Main from './components/MainComponent';\nimport './App.css';\nimport {Provider} from 'react-redux';\nimport {ConfigureStore} from './redux/configureStore';\n\nconst store = ConfigureStore();\n\nclass App extends Component {\n  \n  render() {\n    return (\n      <Provider store = {store}>\n          <BrowserRouter>\n            <div>\n              <Main />\n            </div>\n          </BrowserRouter>\n      </Provider>\n    );\n  }\n}\n\n\nexport default App;\n","import {createStore, combineReducers, applyMiddleware} from 'redux';\r\nimport { Dishes } from './dishes';\r\nimport { Comments } from './comments';\r\nimport { Promotions } from './promotions';\r\nimport { Leaders } from './leaders';\r\nimport thunk from 'redux-thunk';\r\nimport logger from 'redux-logger';\r\nimport { createForms } from 'react-redux-form';\r\nimport { InitialFeedback } from './forms';\r\n\r\nexport const ConfigureStore = () => {\r\n    const store = createStore(\r\n        combineReducers({\r\n            dishes: Dishes,\r\n            comments: Comments,\r\n            promotions: Promotions,\r\n            leaders: Leaders,\r\n            ...createForms({\r\n                feedback: InitialFeedback\r\n            })\r\n        }),\r\n        applyMiddleware(thunk, logger)\r\n    );\r\n\r\n    return store;\r\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'font-awesome/css/font-awesome.min.css';\nimport 'bootstrap-social/bootstrap-social.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}